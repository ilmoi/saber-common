{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * [[include:chai-solana/README.md]]\n * @module\n */\n\nimport \"./types.js\";\n\nimport type { Address } from \"@project-serum/anchor\";\nimport { BN } from \"@project-serum/anchor\";\nimport { TokenAmount } from \"@saberhq/token-utils\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport chaiAsPromised from \"chai-as-promised\";\nimport { default as chaiBN } from \"chai-bn\";\n\nexport * from \"./debugAccountOwners.js\";\nexport * from \"./expectTXTable.js\";\nexport * from \"./printInstructionLogs.js\";\nexport * from \"./utils.js\";\n\nexport const chaiSolana: Chai.ChaiPlugin = (chai) => {\n  chai.use(chaiBN(BN) as Chai.ChaiPlugin);\n  chai.use(chaiAsPromised);\n  chai.config.includeStack = true;\n\n  chai.use((chai) => {\n    chai.Assertion.addProperty(\n      \"tokenAmount\",\n      function (): Chai.TokenAmountAssertion {\n        const assert = this.assert.bind(this);\n        const obj = this._obj as unknown;\n        const equal: Chai.TokenAmountAssertion[\"equal\"] = function (\n          value,\n          message\n        ) {\n          const amount = value instanceof TokenAmount ? value.toU64() : value;\n          const msgPrefix = message ? `${message}: ` : \"\";\n\n          const myAmount = obj as TokenAmount;\n          if (value instanceof TokenAmount) {\n            assert(\n              myAmount.token.equals(value.token),\n              `${msgPrefix}token mismatch: #{this} to equal #{exp} but got #{act}`,\n              `${msgPrefix}token mismatch: expected #{this} to not equal #{act}`,\n              {\n                address: value.token.address,\n                decimals: value.token.decimals,\n                network: value.token.network,\n              },\n              {\n                address: myAmount.token.address,\n                decimals: myAmount.token.decimals,\n                network: myAmount.token.network,\n              }\n            );\n          }\n\n          const otherAmt = new TokenAmount(myAmount.token, amount.toString());\n          assert(\n            myAmount.equalTo(otherAmt),\n            `${msgPrefix}expected #{this} to equal #{exp} but got #{act}`,\n            `${msgPrefix}expected #{this} to not equal #{exp} but got #{act}`,\n            otherAmt.format(),\n            myAmount.format()\n          );\n        };\n        return {\n          equal,\n          equals: equal,\n          eq: equal,\n          zero: () => {\n            equal(0);\n          },\n        };\n      }\n    );\n\n    chai.Assertion.addMethod(\n      \"eqAddress\",\n      function (otherKey: Address, message?: string) {\n        const obj = this._obj as unknown;\n\n        this.assert(\n          (obj as Record<string, unknown>)?._bn ||\n            obj instanceof PublicKey ||\n            typeof obj === \"string\",\n          \"expected #{this} to be a PublicKey or address string\",\n          \"expected #{this} to not be a PublicKey or address string\",\n          true,\n          obj\n        );\n        const key = obj as Address;\n\n        const myKey = typeof key === \"string\" ? new PublicKey(key) : key;\n        const theirKey =\n          typeof otherKey === \"string\" ? new PublicKey(otherKey) : otherKey;\n\n        const msgPrefix = message ? `${message}: ` : \"\";\n\n        this.assert(\n          myKey.equals(theirKey),\n          `${msgPrefix}expected #{this} to equal #{exp} but got #{act}`,\n          `${msgPrefix}expected #{this} to not equal #{act}`,\n          otherKey.toString(),\n          myKey.toString()\n        );\n      }\n    );\n\n    chai.Assertion.addMethod(\n      \"eqAmount\",\n      function (other: TokenAmount, message?: string) {\n        const obj = this._obj as unknown;\n        const myAmount = obj as TokenAmount;\n        const msgPrefix = message ? `${message}: ` : \"\";\n\n        this.assert(\n          myAmount.token.equals(other.token),\n          `${msgPrefix}token mismatch: #{this} to equal #{exp} but got #{act}`,\n          `${msgPrefix}token mismatch: expected #{this} to not equal #{act}`,\n          myAmount.token,\n          other.token\n        );\n\n        this.assert(\n          myAmount.raw.toString() === other.raw.toString(),\n          `${msgPrefix}expected #{this} to equal #{exp} but got #{act}`,\n          `${msgPrefix}expected #{this} to not equal #{act}`,\n          myAmount.toString(),\n          other.toString()\n        );\n      }\n    );\n  });\n};\n"]}