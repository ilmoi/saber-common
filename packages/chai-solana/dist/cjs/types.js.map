{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/types.ts"],"names":[],"mappings":";AAAA,8BAA8B;;AAE9B,mBAAiB;AACjB,4BAA0B","sourcesContent":["/// <reference types=\"chai\" />\n\nimport \"chai-bn\";\nimport \"chai-as-promised\";\n\nimport type { Address } from \"@project-serum/anchor\";\nimport type { BigintIsh, TokenAmount } from \"@saberhq/token-utils\";\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace Chai {\n    export interface TokenAmountComparer {\n      (value: TokenAmount | BigintIsh, message?: string): void;\n    }\n\n    export interface TokenAmountAssertion {\n      equal: TokenAmountComparer;\n      equals: TokenAmountComparer;\n      eq: TokenAmountComparer;\n      // above: TokenAmountComparer;\n      // greaterThan: TokenAmountComparer;\n      // gt: TokenAmountComparer;\n      // gte: TokenAmountComparer;\n      // below: TokenAmountComparer;\n      // lessThan: TokenAmountComparer;\n      // lt: TokenAmountComparer;\n      // lte: TokenAmountComparer;\n      // least: TokenAmountComparer;\n      // most: TokenAmountComparer;\n      // closeTo: BNCloseTo;\n      // negative: BNBoolean;\n      zero: () => void;\n    }\n\n    interface Assertion {\n      eqAddress: (otherKey: Address, message?: string) => Assertion;\n      eqAmount: (otherAmount: TokenAmount, message?: string) => Assertion;\n      tokenAmount: TokenAmountAssertion;\n    }\n  }\n}\n"]}