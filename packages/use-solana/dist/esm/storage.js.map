{"version":3,"file":"storage.js","sourceRoot":"","sources":["../../src/storage.ts"],"names":[],"mappings":"AASA;;GAEG;AACH,MAAM,CAAC,MAAM,qBAAqB,GAAmB;IACnD,GAAG,CAAC,GAAG;QACL,OAAO,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD,CAAC;IACD,GAAG,CAAC,GAAG,EAAE,KAAK;QACZ,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACjC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IACD,MAAM,CAAC,GAAG;QACR,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;CACF,CAAC","sourcesContent":["/**\n * Allows storing and persisting user settings.\n */\nexport interface StorageAdapter {\n  get(key: string): Promise<string | null>;\n  set(key: string, value: string): Promise<void>;\n  remove(key: string): Promise<void>;\n}\n\n/**\n * Adapter to use `localStorage` for storage.\n */\nexport const LOCAL_STORAGE_ADAPTER: StorageAdapter = {\n  get(key) {\n    return Promise.resolve(localStorage.getItem(key));\n  },\n  set(key, value) {\n    localStorage.setItem(key, value);\n    return Promise.resolve();\n  },\n  remove(key) {\n    localStorage.removeItem(key);\n    return Promise.resolve();\n  },\n};\n"]}