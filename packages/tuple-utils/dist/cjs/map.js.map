{"version":3,"file":"map.js","sourceRoot":"","sources":["../../src/map.ts"],"names":[],"mappings":";;;AACA,wDAA6C;AAI7C;;GAEG;AACI,MAAM,aAAa,GAAG,CAC3B,KAAkB,EAClB,KAAyB,EACL,EAAE;IACtB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAA,mBAAI,EAAC,KAAK,EAAE,CAAC,CAAC,CAAuB,CAAC;AAChE,CAAC,CAAC;AALW,QAAA,aAAa,iBAKxB","sourcesContent":["import type { Maybe } from \"@saberhq/option-utils\";\nimport { mapN } from \"@saberhq/option-utils\";\n\nimport type { Tuple } from \"./tuple.js\";\n\n/**\n * Applies `mapFn` to the inner value of the tuple.\n */\nexport const tupleMapInner = <T, U, N extends number>(\n  mapFn: (v: T) => U,\n  tuple: Tuple<Maybe<T>, N>\n): Tuple<Maybe<U>, N> => {\n  return tuple.map((v) => mapN(mapFn, v)) as Tuple<Maybe<U>, N>;\n};\n"]}